{"version":3,"sources":["webpack://nasa-api-project/./src/components/MarsPicture/MarsPicture.js","webpack://nasa-api-project/./src/components/Select/Select.js","webpack://nasa-api-project/./src/containers/Mars/Mars.js"],"names":["MarsPictures","data","styles","textAlign","fontSize","marginTop","componentToRender","length","style","className","map","marsPictureObject","data-id","id","rover","name","marginLeft","landing_date","src","img_src","width","height","Select","options","onChange","value","stylesName","option","mappedCameras","keysForOptions","Object","keys","days","Array","from","_","i","toString","months","years","Mars","dispatch","useDispatch","useState","camera","setCamera","day","month","year","date","setDate","marsReducer","useSelector","state","loading","error","handleChangeDate","e","prev","target","useEffect","allNonEmpty","every","cameraName","fetchPictures"],"mappings":"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","file":"990.5e630227e9e469f389e4.bundle.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function MarsPictures({data}) {\r\n    const styles = {\r\n        textAlign: 'center',\r\n        fontSize: '18px',\r\n        marginTop: '10px',\r\n    };\r\n    let componentToRender = null;\r\n    if(!data) {\r\n        componentToRender = <div style={styles}>Фотографии марса</div>\r\n    } else if(data.length === 0) {\r\n        componentToRender = <div style={styles}>Нет фотографии по данному запросу</div>\r\n    } else {\r\n        componentToRender = \r\n        <div className=\"mars_pictures_wrapper\">\r\n            {data.map((marsPictureObject) => {\r\n            return (\r\n                <div data-id={marsPictureObject.id} className=\"mars_picture_each\">\r\n                    <label>Марсоход: {marsPictureObject.rover.name}</label>\r\n                    <span style={{\r\n                        marginLeft: '5px'\r\n                    }}>Дата приземления: {marsPictureObject.rover.landing_date}</span>\r\n                    <div>\r\n                        <img src={marsPictureObject.img_src} width=\"300px\" height=\"300px\"/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })}\r\n        </div>\r\n    }\r\n    return <div>{componentToRender}</div>\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Select({options, onChange, value, stylesName, name}) {\r\n    return (\r\n        <select \r\n        onChange={onChange} \r\n        value={value} \r\n        className={`select_common ${stylesName ? stylesName : ''}`} \r\n        name={name}>\r\n            {options.map((option) => {\r\n                return (\r\n                    <option>{option}</option>\r\n                )\r\n            })}\r\n        </select>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport MarsPictures from '../../components/MarsPicture/MarsPicture';\r\nimport Select from '../../components/Select/Select';\r\nimport {fetchPictures} from '../../redux/marsPicturesReducer';\r\n\r\nconst mappedCameras = {\r\n    \"Передняя камера предотвращения опасности\": \"FHAZ\",\r\n    \"Задняя камера предотвращения опасности\": \"RHAZ\",\r\n    \"Мачтовая камера\": \"MAST\",\r\n    \"Химико-фотоаппаратный комплекс\": \"CHEMCAM\",\r\n    \"Ручной тепловизор Mars\": \"MAHLI\",\r\n    \"Спускаемый имидж-сканер на Марс\": \"MARDI\",\r\n    \"Навигационная камера\":  \"NAVCAM\",\r\n    \"Панорамная камера\":  \"PANCAM\",\r\n    \"Миниатюрный термоэмиссионный спектрометр (Mini-TES)\": \"MINITES\",\r\n}\r\n\r\nconst keysForOptions = Object.keys(mappedCameras);\r\n\r\n// отчет с нуля \r\nconst days = Array.from({length: 31},(_,i) => i < 9 ? \"0\" + ++i : (++i).toString());\r\nconst months = Array.from({length:12},(_,i) => i < 9 ? \"0\" + ++i : (++i).toString());\r\nconst years = Array.from({length: 100},(_,i) => 1922+i);\r\n\r\nexport default function Mars() {\r\n    const dispatch = useDispatch();\r\n    const [camera,setCamera] = useState('');\r\n    const [date,setDate] = useState({\r\n        day: '',\r\n        month: '',\r\n        year: '',\r\n    })\r\n\r\n    const {marsReducer} = useSelector(state => {\r\n        return state;\r\n    });\r\n    const {data, loading, error} = marsReducer;\r\n\r\n    function handleChangeCamera(e) {\r\n        setCamera(e.target.value);\r\n    };\r\n\r\n    function handleChangeDate(e) {\r\n        setDate((prev) => {\r\n            return {\r\n                ...prev,\r\n                [e.target.name]: e.target.value,\r\n            }\r\n        })       \r\n    };\r\n    useEffect(() => {\r\n        const {day, month, year} = date;\r\n        const allNonEmpty = [day,month,year,camera].every(value => value !== '');\r\n        const cameraName = camera ? mappedCameras[camera] : null\r\n        if (allNonEmpty) {\r\n            dispatch(fetchPictures({\r\n                cameraName: cameraName,\r\n                ...date\r\n            }));\r\n            setCamera('')\r\n            setDate((_) => {\r\n                return {\r\n                    day: '',\r\n                    month: '',\r\n                    year: ''\r\n                }\r\n            })\r\n        }\r\n    }, [date,camera])\r\n    return (\r\n        <div className=\"mars_page\">\r\n            <div className=\"mars_select_wrapper\">\r\n                <div className=\"mars_select_item\">\r\n                    <label className=\"mars_select_label\">Выберите камеру: </label>\r\n                    <Select options={keysForOptions} value={camera} onChange={handleChangeCamera}/>\r\n                </div>\r\n                <div className=\"mars_select_item\">\r\n                    <label className=\"mars_select_label\">Выберите день: </label>\r\n                    <Select options={days} onChange={handleChangeDate} name=\"day\" value={date.day}/>\r\n                </div>\r\n                <div className=\"mars_select_item\">\r\n                    <label className=\"mars_select_label\">Выберите месяц: </label>\r\n                    <Select options={months} onChange={handleChangeDate} name=\"month\" value={date.month}/>\r\n                </div>\r\n                <div className=\"mars_select_item\">\r\n                    <label className=\"mars_select_label\">Выберите год: </label>\r\n                    <Select options={years} onChange={handleChangeDate} name=\"year\" value={date.year}/>\r\n                </div>\r\n            </div>\r\n            {loading === 'process' && <div>Загружаю</div>}\r\n            {loading === 'success' &&<MarsPictures data={data}/>}\r\n            {error && <div>Ошибка сервера</div>}\r\n        </div>\r\n    )\r\n}"],"sourceRoot":""}